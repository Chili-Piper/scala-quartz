name: CI
on:
  pull_request:
  push:
  release:
    types: [ published ]
jobs:
  ciJvms:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
      - name: Setup Scala-CLI
        uses: VirtusLab/scala-cli-setup@v1
        with:
          scala-cli-version: latest
      - run: scala-cli config power true
      - run: scala-cli publish local .

  ci:
    if: always()
    runs-on: ubuntu-latest
    needs: [ ciJvms ]
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}

  publish:
    runs-on: ubuntu-latest
    needs: [ ci ]
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 100
      - name: Setup Scala-CLI
        uses: VirtusLab/scala-cli-setup@v1
        with:
          scala-cli-version: latest
      - run: scala-cli config power true
      - name: Configure PGP key
        run: echo "$GPG_PRIVATE_KEY" | scala-cli config --pgp-secret-key - --pgp-password "$GPG_PASSPHRASE"
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Configure Sonatype credentials
        run: scala-cli config publish.credentials s01.oss.sonatype.org env:SONATYPE_USER env:SONATYPE_PASSWORD
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      - name: Publish library
        run: scala-cli publish --cross .
